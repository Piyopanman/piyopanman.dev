[{"content":"紛らわしい用語とか紛らわしい用法とかまとめておく！\n間違っていたらTwitterか何かで教えてください！！！！\nSection, Content Type, Archetype Section 公式 ディレクトリ構造によって決められるやつ。 content直下のディレクトリか_index.mdを含むディレクトリはセクション扱いになる front matterで上書きできない sectionに関する変数やメソッド がある Content Type 公式 typeが設定されていない場合は所属しているディレクトリになる どのテンプレートを使ってレンダリングされるかに使用される Archetype 公式 hugo new xxxしたときに、どの.mdファイルを使ってファイルを生成するかを決める hugo new posts/hoge.mdってしたら、archetype/posts.mdをもとにしてcontent/posts/hoge.mdが作られる hugo new xxxで作ったコンテントファイルで{{ .Site.Xxx }}みたいに変数は使えないが、archetypeディレクトリ内の.mdファイルでは使える Taxonomy, Term, Value Taxonomy 公式 ユーザが独自にコンテンツを分類するための仕組み コンテンツを分類するために使われる config.yml内でサイトレベルで設定するもの Taxonomyごとのリンクを設定できる（/categories/ /tags/など） デフォルトでは、categoriesとtagsというtaxonomyが設定されている Term taxonomyの中のkey(categoriesの中の memo とかがterm) Value Termにアサインされたコンテンツ front matterの中で\ntaxonomy: [term1, term2]\nってする。例えば,\ncategories: [memo, development]\nなので、Valueにあたるのはコンテンツファイル。\n変数 変数は大体templete内で使うもの！\nSite変数 .Site.Xxxの形 config.yml内で定義されているものと、組み込みで最初からあるもの partialテンプレート内では.Site.Params.Xxxの形で使う Page変数 .Xxxの形 抽出される場所は コンテンツファイルのfront matter コンテンツファイルのある場所 コンテンツのボディ のいずれか front matterで設定した値は.Params.xxxでアクセスできる(.Param \u0026quot;xxx\u0026quot;でも可) ネストされている場合は.Param \u0026quot;xxx.yyy\u0026quot; File変数 .File.Xxxの形 ディレクトリ構造とかに基づいた値 shortcode変数 .Xxxの形 独自のshortcodeを作成する際に使うことが多い（ shortcode template ） shortcodeは.mdファイル内でhtmlを書かなくて済むようにという思想から作られたものだが、だからと言ってshortcode変数が(content/).mdファイル内で使えるというわけではない content/xxx.mdファイル内でfront matterで定義された値にアクセスするには、\n{ {\u0026lt; param yyy \u0026gt;} }という形でアクセスする( 公式 ) ","permalink":"https://piyopanman.github.io/piyopanman.dev/memos/hugo/","summary":"紛らわしい用語とか紛らわしい用法とかまとめておく！ 間違っていたらTwitterか何かで教えてください！！！！ Section, Content Type, Archetype Section 公式 ディレクトリ構造に","title":"【Hugo】紛らわしい用語の整理"},{"content":"やったこと Hugoで新・日報作りの続き hugoで紛らわしい用語のまとめ というメモを書いた javascript.infoを読む会ソロ 記事読んだ 一人アドベントカレンダーのススメ 素敵な記事だ 筆者はひとつには「反応の早さ」が技術力にあたると思っています。\n私が日報に何を学んだのか記録しておくモチベの一つにこれに近いことがあるんだよな。「これなんか前に勉強したことあるな〜確か日報にも書いたはず」となる状態がかなり安心感あるのよね 体系的に人に伝えると、自分もより体系的に理解できる 正確な表現を心がけると、既存の理解に曖昧な部分が減る\n大事 2022年に触った技術の振り返り はじめて知った事 Cloud Spanner 新しい形の SQL DB で、スケーラブル・分散アーキテクチャなど、過去の RDBMS にはない特徴を持ち、NewSQL と呼ばれているらしいです 良かったこと お昼ご飯を控えめにしたから午後眠くならずに作業に集中できた！ テーマを少しいじって自分好みの日報に近づけられた！ 理解が曖昧なところはすぐに公式ドキュメントを読んで解決しようとする姿勢があった！ 改善できると良いこと 完成に近づくと、完成を焦ってしまう気持ちが出てきがちなので注意 明日以降にやりたいこと javascript.info続き DNSのCNAMEとかそこら辺周りの知識がガバガバのガバなので確認 所感 夕飯の餃子美味しかった ","permalink":"https://piyopanman.github.io/piyopanman.dev/daily-reports/2022-12-30/","summary":"やったこと Hugoで新・日報作りの続き hugoで紛らわしい用語のまとめ というメモを書いた javascript.infoを読む会ソロ 記事読んだ","title":"2022年12月30日"},{"content":"やったこと javascript.infoを読む会ソロ（~5.11 日付と時間） 日報作り直すためにHugoのドキュメントずっと読んでた 記事読んだ 【決定版】2022年～2023年で必ず確認するべきGitHubリポジトリ 40選 はじめて知った事 Hugoのドキュメントずっと読んでいたのではじめて知った事だらけ aタグのrel属性 、noopnerとかnofollowとかnextとか。 あまり意識して使ったことがなかったので知られてよかった（リンクを別タブで開くというmarkupのカスタマイズをするために調べてた） 良かったこと この記事 を読んで「焦らず」「早く完成させようとしない」「理解しないことの方を恐れる」を自分に何度も言い聞かせながら、ほぼ公式ドキュメントしか見ずにこのサイトの開発をできた！めちゃくちゃ進歩！ 時間はかかるが、理解して進んでいる感があり、わからないことや曖昧なことが出てきた場合、探す場所はドキュメント内という制限があることで集中できていた気がする これを習慣にすれば自己肯定感高まると思う ポモドーロタイマーを使ってメリハリつけて作業できた 家事を結構頑張った。夜ご飯のパスタを美味しく作れた😋 技術記事を読めた 改善できると良いこと 作業中にスマホを集中モードにするのを忘れて通知がくると気が散っちゃったので、明日は作業始める前に集中モードにする。 明日以降にやりたいこと Hugoで新・日報サイト作りの続き！ できたらGitHub Actionsの設定とかまで行きたい（焦らない程度に） Hugoの紛らわしい用語や使い方についてメモしたので、ここのどこかにまとめておきたい javascript.infoを読む会ソロ 技術記事読む 所感 今日はよく頑張ったので充実感があって良いね！いつもこれくらい頑張りたい（卒論は？） 明日も、焦らず、完成を急がず、じっくり理解して、を言い聞かせて頑張るぞい💪 ","permalink":"https://piyopanman.github.io/piyopanman.dev/daily-reports/2022-12-29/","summary":"やったこと javascript.infoを読む会ソロ（~5.11 日付と時間） 日報作り直すためにHugoのドキュメントずっと読んでた 記事読んだ","title":"2022月12月29日"}]